import aQute.bnd.gradle.Bundle

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd.builder:biz.aQute.bnd.builder.gradle.plugin:5.0.0',
            'org.apache.sling:org.apache.sling.bnd.models:1.0.0'
    }
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'biz.aQute.bnd.builder'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

group = 'org.mnode.whistlepost'
version = rootProject.scmVersion.version

task bundle(type: Bundle) {
    from sourceSets.main.output
    bndfile = 'bnd.bnd'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

javadoc {
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

jar.enabled = false
build.dependsOn bundle

artifacts {
    archives bundle
    archives javadocJar
    archives sourcesJar
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bundle)
    }
}

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

publishing {
    publications {
        mavenArtifacts(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            pom.withXml {
                asNode().appendNode('name', name)
                asNode().appendNode('description', description)
                asNode().appendNode('url', 'http://whistlepost.org')

                def scmNode = asNode().appendNode('scm')
                scmNode.appendNode('url', 'https://github.com/micronode/whistlepost')
                scmNode.appendNode('connection', 'scm:git@github.com:micronode/whistlepost.git')
                scmNode.appendNode('developerConnection', 'scm:git@github.com:micronode/whistlepost.git')

                def licenseNode = asNode().appendNode('licenses').appendNode('license')
                licenseNode.appendNode('name', 'Whistlepost - License')
                licenseNode.appendNode('url', 'https://raw.githubusercontent.com/micronode/whistlepost/master/LICENSE')
                licenseNode.appendNode('distribution', 'repo')

                def developerNode = asNode().appendNode('developers').appendNode('developer')
                developerNode.appendNode('id', 'fortuna')
                developerNode.appendNode('name', 'Ben Fortuna')
            }
        }
    }
}

signing {
    required { isReleaseVersion }
    //sign configurations.archives
    sign publishing.publications.mavenArtifacts
}
